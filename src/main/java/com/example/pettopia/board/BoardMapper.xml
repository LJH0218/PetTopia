<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pettopia.board.BoardMapper">


<!-- 댓글 작성 -->
<insert id="insertComment" parameterType="com.example.pettopia.vo.BoardComment">
INSERT INTO
	board_comment (
    board_no ,
    comment_writer_no,
    comment_content , 
    comment_depth , 
    create_datetime , 
    update_datetime 
) 
VALUES
	(#{boardNo}, #{commentWriterNo},#{commentContent}, 1, NOW(), NOW());
</insert>



<!-- 대댓글 작성 -->
<insert id="insertCommentDepth" parameterType="com.example.pettopia.vo.BoardComment">
INSERT INTO
	board_comment (
    board_no ,
    comment_writer_no,
    comment_content , 
    comment_depth , 
    create_datetime , 
    update_datetime 
) 
VALUES
	(#{boardNo},#{commentWriterNo},#{commentContent},2, NOW(), NOW());
</insert>
<select id="selectBoardComment" parameterType="Map" resultType="com.example.pettopia.vo.BoardComment">
    SELECT 
        comment_no AS commentNo, 
        board_no AS boardNo, 
        comment_writer_no AS commentWriterNo, 
        comment_content AS commentContent,  
        comment_depth AS commentDepth, 
        create_datetime AS createDatetime, 
        update_datetime AS updateDatetime
    FROM 
        board_comment
    WHERE 
        board_no = #{boardNo}
    ORDER BY     
        comment_depth ASC,                
        create_datetime ASC
</select>

<select id="countBoardComment" parameterType="Integer" resultType="Integer">
    SELECT COUNT(*) 
    FROM board_comment
    WHERE board_no = #{boardNo};
</select>

<!-- 게시글 수정 -->
<update id="updateBoard" parameterType="com.example.pettopia.vo.Board" >
UPDATE
	board
SET
    board_title = #{boardTitle},
    board_header = #{boardHeader},
    board_content = #{boardContent},
    update_datetime = NOW()
WHERE
	board_no = #{boardNo}
</update>

<!-- 이미지 파일 수정 -->
<update id="updateBoardFile" parameterType="com.example.pettopia.vo.BoardFile">
	UPDATE
		board_file
	SET
		origin_file_name = #{originFileName},
		file_name = #{fileName},
		file_ext = #{fileExt},
		file_type = #{fileType},
		update_datetime = NOW()
	WHERE
		board_no = #{boardNo}
</update>	
	
<!-- 공지사항 리스트 : 부서 목록 -->
<select id="selectDivisionList" resultType="com.example.pettopia.vo.Division">
	SELECT division_code divisionCode
			, division_name divisionName
	FROM division
</select>
	
<!-- 이미지 파일 삭제 -->
 <delete id="deleteBoardFile" parameterType="int">
        DELETE FROM board_file
        WHERE board_no = #{boardNo}
 </delete>
	 
	
<select id="selectBoardCount" parameterType="Map" resultType="Integer">
    SELECT count(*)
    FROM board
    <where>
        <!-- 카테고리가 'ALL'이 아니면 board_Header로 필터링 -->
        <if test="boardCategory != 'ALL'">
            AND board_Header = #{boardCategory}
        </if>

        <!-- 검색어가 주어지면, board_title과 board_content에서 대소문자 구분 없이 검색 -->
        <if test="searchBoard != null and searchBoard != ''">
            AND (
                LOWER(board_title) LIKE CONCAT('%', LOWER(#{searchBoard}), '%')
                OR LOWER(board_content) LIKE CONCAT('%', LOWER(#{searchBoard}), '%')
            )
        </if>
    </where>
</select>
	
<select id="selectBoardFile" parameterType="int" resultType="com.example.pettopia.vo.BoardFile">
    SELECT
        board_file_no boardFileNo,
        board_no boardNo,
        origin_file_name originFileName,
        file_name fileName,
        file_ext fileExt,
        file_type fileType,
        create_datetime createDatetime,
        update_datetime updateDatetime
    FROM
        board_file
    WHERE 
        board_no = #{boardNo}
</select>
	
	
	
	<!-- 게시글 카테고리 셀렉트 쿼리 /board/boardList 작업자 : 이준호 -->
	<select id="selectHeaderListByBoard" parameterType="String" resultType="map">
		SELECT
		    board_no AS boardNo,
		    board_title AS boardTitle,
		    board_writer_no AS boardWriterNo,
		    board_header AS boardHeader,
		    board_view AS boardView,
		    board_like AS boardLike,
		    DATE_FORMAT(create_datetime, '%y-%m-%d') AS createDate
		FROM
		    board
		WHERE
			 board_header = "#{boardCategory}"
		ORDER BY
		    board_header, create_datetime DESC;
	</select>
	
	<select id="selectListByBoard" parameterType="integer" resultType="map">
    SELECT
        board_no AS boardNo,
        board_title AS boardTitle,
        board_writer_no AS boardWriterNo,
        board_header AS boardHeader,
        board_view AS boardView,
        board_like AS boardLike,
        DATE_FORMAT(create_datetime, '%y-%m-%d') AS createDate
    FROM
        board
    WHERE
        board_no = #{boardNo}
    ORDER BY
        board_header, create_datetime DESC;
</select>
	
	
	<!-- 게시글 작성 쿼리 /board/addBoard 작업자 : 이준호 -->
<insert id="insertBoard" parameterType="com.example.pettopia.vo.Board">
  <selectKey resultType="Integer" keyProperty="boardNo" order="AFTER">
    SELECT LAST_INSERT_ID()
  </selectKey>
  INSERT INTO board(
    board_title,
    board_writer_no,
    board_content,
    board_header,
    board_like,
    board_view,
    create_datetime
  ) VALUES (
    #{boardTitle},
    #{boardWriterNo},
    #{boardContent},
    #{boardHeader, jdbcType=VARCHAR},  
    0,
    0,
    NOW()
  )
</insert>
	
	<select id="selectBoardByBoardOne" parameterType="map">
    SELECT
        b.board_no boardNo,
        b.board_title boardTitle,
        b.board_writer_no boardWriterNo,
        b.board_content boardContent,
        b.board_header boardHeader,
        bf.file_name fileName,  <!-- file_name은 LEFT JOIN으로 변경 후 NULL일 수도 있음 -->
        b.board_like boardLike,
        b.board_view boardView,
        b.create_datetime createDatetime,
        b.update_datetime updateDatetime
    FROM 
        board b
    LEFT JOIN  <!-- INNER JOIN에서 LEFT JOIN으로 변경 -->
        board_file bf ON b.board_no = bf.board_no
    WHERE
        b.board_no = #{boardNo}
</select>
	
<select id="selectBoardList" parameterType="Map" resultType="Map">
    SELECT
        b.board_no AS boardNo,
        b.board_writer_no AS boardWriterNo,
        b.board_title AS boardTitle,
        COUNT(bc.comment_no) AS commentCnt,
        CASE
            WHEN b.board_header = 'IN' THEN '정보'
            WHEN b.board_header = 'SG' THEN '건의사항'
            WHEN b.board_header = 'DS' THEN '토론'
            WHEN b.board_header = 'CT' THEN '잡담'
            WHEN b.board_header = 'QA' THEN '질문'
            WHEN b.board_header = 'CP' THEN '칭찬'
            ELSE b.board_header
        END AS boardHeader,
        b.board_like AS boardLike,
        b.board_view AS boardView,
        DATE_FORMAT(b.create_datetime, '%y-%m-%d') AS createDate
    FROM
        board b
    LEFT JOIN
        board_comment bc ON b.board_no = bc.board_no
    <where>
        <!-- 전체 카테고리 확인 -->
        <if test="boardCategory == 'ALL'">
            AND (b.board_header IN ('IN', 'SG', 'DS', 'CT', 'QA', 'CP') OR b.board_header IS NULL)
        </if>
        <if test="boardCategory != 'ALL'">
            AND b.board_header = #{boardCategory}
        </if>
        <!-- 게시글 검색 조건 -->
        <if test="searchBoard != null and searchBoard != ''">
            AND (LOWER(b.board_title) LIKE CONCAT('%', LOWER(#{searchBoard}), '%') 
            OR LOWER(b.board_content) LIKE CONCAT('%', LOWER(#{searchBoard}), '%'))
        </if>
    </where>
    GROUP BY
        b.board_no
    ORDER BY
        boardNo DESC
    LIMIT
        #{beginRow}, #{rowPerPage}
</select>
	
	<!-- 조회수 증가 /board/boardList 작업자 : 이준호 -->
	<update id="updateBoardView" parameterType="com.example.pettopia.vo.Board" >
		UPDATE board
		<set>
			<if test="boardTitle != null and boardTitle != '' ">
				board_title = #{boardTitle},
			</if>
			<if test="boardContent != null and boardContent != '' ">
				board_content = #{boardContent},
			</if>
			<if test="updateDatetime != null and updateDatetime != '' ">
				update_datetime = now()
			</if>
			board_view = board_view + 1,	
		</set>
		
		WHERE board_no = #{boardNo} 
	</update>
		
	<!-- 게시글 삭제 쿼리 /board/removeBoard 작업자 : 이준호 -->
	<delete id="deleteBoard" parameterType="Map">
		DELETE 
		FROM board
		WHERE
			board_no = #{boardNo}
	</delete>
	
	<insert id="insertBoardFile" parameterType="com.example.pettopia.vo.BoardFile">
		INSERT INTO board_file(board_no, origin_file_name, file_name, file_ext, file_type, create_datetime, update_datetime)
		VALUES (#{boardNo}, #{originFileName}, #{fileName}, #{fileExt}, #{fileType}, NOW(), NOW());
	</insert>
	
</mapper>